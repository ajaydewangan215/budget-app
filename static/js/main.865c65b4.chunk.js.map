{"version":3,"sources":["context/AppReducer.jsx","context/AppContext.jsx","components/AddTransaction.jsx","components/Balance.jsx","delete.svg","components/TransactionList.jsx","components/Budget.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["AppReducer","state","action","type","items","payload","filter","item","id","initialState","JSON","parse","localStorage","getItem","BudgetContext","createContext","AppContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","AddData","data","deleteItem","deleteAll","AddTransaction","useContext","useState","transactionType","itemText","itemAmount","transaction","setTransaction","inputEvent","e","target","name","className","method","onSubmit","preventDefault","newTransaction","Date","getTime","onChange","placeholder","autoComplete","Balance","income","expense","totalIncome","reduce","accum","curVal","Number","toFixed","totalExpense","TransactionList","map","element","src","Delete","alt","onClick","window","confirm","length","data-hover","data-active","Budget","AppContext","App","serviceWorker","navigator","swUrl","process","register","then","registration","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.865c65b4.chunk.js","sourcesContent":["export const AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload]\r\n            }\r\n        case 'DELETE_ITEM':\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => {\r\n                    return item.id !== action.payload\r\n                }),\r\n            }\r\n        case 'DELETE_ALL':\r\n            return {\r\n                ...state,\r\n                items: [],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react'\r\nimport { AppReducer } from './AppReducer'\r\n\r\nconst initialState = {\r\n    items:JSON.parse(localStorage.getItem('budgetlist')) || []\r\n}\r\n// Create a Context\r\nexport const BudgetContext = createContext()\r\n// It returns an object with 2 values:\r\n// { Provider, Consumer }\r\n\r\nconst AppContextProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)  \r\n    \r\n    const  AddData = data => {\r\n        dispatch({\r\n            type:\"ADD_TRANSACTION\",\r\n            payload:data\r\n        })\r\n    }\r\n\r\n    const  deleteItem = id => {\r\n        dispatch({\r\n            type:\"DELETE_ITEM\",\r\n            payload:id\r\n        })\r\n    }\r\n\r\n    const  deleteAll = () => {\r\n        dispatch({\r\n            type:\"DELETE_ALL\"\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"budgetlist\",JSON.stringify(state.items))        \r\n    }, [state.items])\r\n\r\n    return (\r\n        <>\r\n            <BudgetContext.Provider value={{ ...state, AddData, deleteItem, deleteAll }}>\r\n                {children}\r\n            </BudgetContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppContextProvider\r\n","import React, { useContext, useState } from 'react'\r\nimport { BudgetContext } from '../context/AppContext'\r\n\r\nconst AddTransaction = () => {\r\n    const { AddData } = useContext(BudgetContext)\r\n    \r\n    const [transaction, setTransaction] = useState({\r\n        transactionType:'Income', itemText:'', itemAmount:''\r\n    })\r\n\r\n    const {transactionType, itemText, itemAmount} = transaction\r\n    const inputEvent = e => {\r\n        setTransaction({...transaction, [e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault() \r\n         \r\n        if(itemText && itemAmount){\r\n            const newTransaction = { \r\n                id:new Date().getTime(),\r\n                transactionType, \r\n                itemText,\r\n                itemAmount\r\n            }\r\n            AddData(newTransaction)\r\n            setTransaction({transactionType:'', itemText:'', itemAmount:''})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form method=\"post\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"transactionType\" onChange={inputEvent}>\r\n                        <option value=\"Income\">Income</option>\r\n                        <option value=\"Expense\">Expense</option>\r\n                    </select>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"itemText\" \r\n                        placeholder=\"Add Item Description\" \r\n                        autoComplete=\"off\"\r\n                        onChange={inputEvent}\r\n                        value={transaction.itemText}\r\n                    />\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"itemAmount\" \r\n                        placeholder=\"Amount\"\r\n                        onChange={inputEvent} \r\n                        autoComplete=\"off\"\r\n                        value={transaction.itemAmount}\r\n                    />\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React,  { useContext } from 'react'\r\nimport { BudgetContext } from '../context/AppContext'\r\n\r\nconst Balance = () => {\r\n    const { items } = useContext(BudgetContext)\r\n    const income = items.filter(item => { \r\n        return item.transactionType === 'Income'\r\n    })\r\n    const expense = items.filter(item => { \r\n        return item.transactionType === 'Expense'\r\n    })\r\n\r\n    const totalIncome = income.reduce( (accum, curVal) => {\r\n        accum += Number(curVal.itemAmount)\r\n        return accum\r\n    }, 0).toFixed(2)\r\n\r\n    const totalExpense = expense.reduce( (accum, curVal) => {\r\n        accum += Number(curVal.itemAmount)\r\n        return accum\r\n    }, 0).toFixed(2)\r\n\r\n    return (\r\n        <div className=\"balance-box\">\r\n            <div className=\"income\">\r\n                <h3>Income</h3>\r\n                <p>{totalIncome}</p>\r\n            </div>\r\n            <div className=\"expense\">\r\n                <h3>Expanse</h3>\r\n                <p>{totalExpense}</p>\r\n            </div>\r\n            <div className=\"balance\">\r\n                <h3>Balance</h3>\r\n                <p>{(totalIncome-totalExpense).toFixed(2)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","export default __webpack_public_path__ + \"static/media/delete.604f17ae.svg\";","import React, { useContext } from 'react'\r\nimport Delete from '../delete.svg'\r\nimport { BudgetContext } from '../context/AppContext'\r\n\r\nconst TransactionList = () => {\r\n    const { items, deleteItem, deleteAll } = useContext(BudgetContext)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"transaction-list\">\r\n                <h2>Transactions History</h2>\r\n                <ul className=\"list\">\r\n                    {\r\n                        items.map((element) => {\r\n                            const { id, transactionType, itemText, itemAmount } = element\r\n                            return (\r\n                                <li className=\"list-item\" key={id}>\r\n                                    <span>{itemText}</span>\r\n                                    <span>{transactionType}</span>\r\n                                    <span>{itemAmount}</span>\r\n                                    <img src={Delete} alt=\"delete-item\" onClick={() => { if (window.confirm('Are you sure to delete this record?')) {deleteItem(id)} }} />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            {\r\n                items.length ?\r\n                    <div className=\"btn\">\r\n                        <button\r\n                            className=\"button remove-all\"\r\n                            type=\"button\"\r\n                            data-hover=\"REMOVE ALL\"\r\n                            data-active=\"I'M ACTIVE\"\r\n                            onClick={() => {\r\n                                if (window.confirm('Are you sure to delete All record?')) {\r\n                                    deleteAll()\r\n                                }\r\n                            }\r\n                            }><span>REMOVE ALL</span>\r\n                        </button>\r\n                    </div> :\r\n                    ''\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList","import React from 'react'\r\nimport AddTransaction from './AddTransaction'\r\nimport Balance from './Balance'\r\nimport TransactionList from './TransactionList'\r\nimport AppContextProvider from '../context/AppContext'\r\n\r\nconst Budget = () => {\r\n    return (\r\n        <AppContextProvider>\r\n            <div className=\"container\">\r\n                <h1>Budget App</h1>\r\n                <Balance />\r\n                <AddTransaction />\r\n                <TransactionList />\r\n            </div>\r\n        </AppContextProvider>\r\n    )\r\n}\r\n\r\nexport default Budget\r\n","import './App.css'\nimport Budget from './components/Budget'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Budget />\n    </div>\n  );\n}\n\nexport default App;\n","const serviceWorker = () => {\r\n    // Check for browser support of service worker\r\n    if ('serviceWorker' in navigator) {     \r\n        const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\r\n        navigator.serviceWorker.register(swUrl)\r\n        .then((registration) => {\r\n        // Successful registration\r\n        // console.log('Hooray. Registration successful, scope is:', registration);\r\n        }).catch((err) => {\r\n        // Failed registration, service worker won’t be installed\r\n        // console.log('Whoops. Service worker registration failed, error:', err);\r\n        })\r\n   }\r\n}\r\n  \r\nexport default serviceWorker;\r\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker()"],"sourceRoot":""}